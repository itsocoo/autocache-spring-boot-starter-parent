logging.level.root=info
logging.level.com.lzsz.cache.redis.test=info
logging.file=./logs/autocache-redis-spring-boot-starter-test.log
logging.file.max-size=50MB
server.port=8081
spring.application.name=autocache-redis-spring-boot-starter-test
## Caffeine本地缓存
#spring.cache.type=caffeine
#spring.cache.cache-names=redisCacheKeys
#spring.cache.caffeine.spec=initialCapacity=50,maximumSize=500,expireAfterWrite=10s,refreshAfterWrite=5s
## redis
# pro
#spring.redis.host=e681f7bc98d944b4601.redis.rds.aliyuncs.com
#spring.redis.password=LINGZHIappcan1
# test
spring.redis.host=10.xx.xx.xx
spring.redis.password=xxx.xx
spring.redis.database=13
spring.redis.port=6379
#连接超时时间 单位 ms（毫秒）
spring.redis.timeout=2000ms
#    cluster:
#      nodes: 10.3.1.4:7000,10.3.1.4:7001,...,10.3.1.4:7008
# 连接池中的最大空闲连接，默认值也是8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接，默认值也是0
spring.redis.lettuce.pool.min-idle=0
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.lettuce.pool.max-active=8
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出
spring.redis.lettuce.pool.max-wait=-1ms
## auto redis cache
#启动自动缓存的AOP配置
lzsz.cache.aspect.enable=true
#缓存的方法前缀
lzsz.cache.aspect.pointcut-query=find,list,load
#删除缓存的方法前缀
lzsz.cache.aspect.pointcut-evict=update,delete,clean
# 不写scan-package-paths 则启动项目的时候不扫描符合条件的类
lzsz.cache.aspect.scan-package-paths=com.itsocoo.autocache.redis.test.service.impl
lzsz.cache.aspect.scan-class-suffix=ServiceImpl
